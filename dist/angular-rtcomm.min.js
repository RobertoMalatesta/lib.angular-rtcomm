/**
 * Copyright 2014 IBM Corp.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Angular module for Rtcomm
 * @version v1.0.3 - 2016-03-04
 * @link https://github.com/WASdev/lib.angular-rtcomm
 * @author Brian Pulito <brian_pulito@us.ibm.com> (https://github.com/bpulito)
 */
!function(){angular.module("angular-rtcomm-ui",["ui.bootstrap","angular-rtcomm-service"])}(),function(){angular.module("angular-rtcomm",["ui.bootstrap","treeControl","angular-rtcomm-ui","angular-rtcomm-presence","angular-rtcomm-service"])}(),function(){function a(a,b){return{restrict:"E",templateUrl:"templates/rtcomm/rtcomm-presence.html",controller:["$scope","$rootScope",function(c,d){c.monitorTopics=[],c.presenceData=[],c.expandedNodes=[],c.protocolList={chat:!0,webrtc:!1},c.flatten=!1,c.treeOptions={nodeChildren:"nodes",dirSelectable:!0,injectClasses:{ul:"a1",li:"a2",liSelected:"a7",iExpanded:"a3",iCollapsed:"a4",iLeaf:"a5",label:"a6",labelSelected:"a8"}},c.init=function(a){c.protocolList.chat="boolean"==typeof a.chat?a.chat:c.protocolList.chat,c.protocolList.webrtc="boolean"==typeof a.webrtc?a.webrtc:c.protocolList.webrtc,c.flatten="boolean"==typeof a.flatten?a.flatten:c.flatten},c.onCallClick=function(b){var e=a.getEndpoint();a.setActiveEndpoint(e.id),1==c.protocolList.chat&&e.chat.enable(),1==c.protocolList.webrtc&&e.webrtc.enable(function(b,c){b||a.alert({type:"danger",msg:c})}),e.connect(b),d.$broadcast("rtcomm::presence-click")},c.$on("rtcomm::init",function(d,e,f){a.publishPresence();var g=a.getPresenceMonitor();g.on("updated",function(a){b.debug("<<------rtcommPresence: updated------>>"),c.flatten&&(b.debug("<<------rtcommPresence: updated using flattened data ------>>"),c.presenceData=a[0].flatten()),c.$apply()}),c.flatten||(c.presenceData=g.getPresenceData()),c.presenceData.length>=1&&c.expandedNodes.push(c.presenceData[0]);for(var h=0;h<c.monitorTopics.length;h++)b.debug("rtcommPresence: monitorTopic: "+c.monitorTopics[h]),g.add(c.monitorTopics[h])})}],controllerAs:"presence"}}angular.module("angular-rtcomm-presence",["ui.bootstrap","treeControl","angular-rtcomm-service"]).directive("rtcommPresence",a),a.$inject=["RtcommService","$log"]}(),function(){function a(a,b,c){b.debug("RtcommConfigService: Abs URL: "+a.absUrl());var d=a.search().disableRtcomm;d="undefined"==typeof d||null===d?!1:"true"===d?!0:!1,b.debug("RtcommConfigService: _disableRtcomm = "+d);var e={server:a.host(),port:a.port(),rtcommTopicPath:"/rtcomm/",createEndpoint:!1,appContext:"default",userid:"",presence:{topic:""}};b.debug("providerConfig.server: "+e.server),b.debug("providerConfig.port: "+e.port);var f={chat:!0,webrtc:!0},g=!0,h=!0,i="DEBUG",j=null,k=null,l=function(a){e.server="undefined"!=typeof a.server?a.server:e.server,e.port="undefined"!=typeof a.port?a.port:e.port,e.rtcommTopicPath="undefined"!=typeof a.rtcommTopicPath?a.rtcommTopicPath:e.rtcommTopicPath,e.createEndpoint="undefined"!=typeof a.createEndpoint?a.createEndpoint:e.createEndpoint,e.appContext="undefined"!=typeof a.appContext?a.appContext:e.appContext,e.presence.topic="undefined"!=typeof a.presenceTopic?a.presenceTopic:e.presence.topic,f.chat="undefined"!=typeof a.chat?a.chat:f.chat,f.webrtc="undefined"!=typeof a.webrtc?a.webrtc:f.webrtc,g="undefined"!=typeof a.broadcastAudio?a.broadcastAudio:g,h="undefined"!=typeof a.broadcastVideo?a.broadcastVideo:h,k="undefined"!=typeof a.ringbacktone?a.ringbacktone:k,j="undefined"!=typeof a.ringtone?a.ringtone:j,i="undefined"!=typeof a.rtcommDebug?a.rtcommDebug:i,b.debug("rtcommDebug from config is: "+a.rtcommDebug),"undefined"!=typeof a.userid&&(e.userid=a.userid),b.debug("providerConfig is now: ",e)};return{setProviderConfig:function(a){l(a)},getProviderConfig:function(){return e},getWebRTCEnabled:function(){return f.webrtc},getChatEnabled:function(){return f.chat},getBroadcastAudio:function(){return g},getBroadcastVideo:function(){return h},getRingTone:function(){return j},getRingBackTone:function(){return k},getRtcommDebug:function(){return i},isRtcommDisabled:function(){return d}}}function b(a,b,c,d){var e=new rtcomm.EndpointProvider,f=!1,g=null,h=[],i=null,j=!1,k="selfView",l="remoteView";e.setLogLevel(d.getRtcommDebug()),b.debug("rtcomm-service - endpointProvider log level is: "+e.getLogLevel()),b.debug("rtcomm-service - endpointProvider log level should be: "+d.getRtcommDebug()),e.setAppContext(d.getProviderConfig().appContext);var m=function(){return null==i&&(i={state:"available",userDefines:[]}),i},n=function(){var a={ringbacktone:d.getRingBackTone(),ringtone:d.getRingTone(),webrtcConfig:{broadcast:{audio:d.getBroadcastAudio(),video:d.getBroadcastVideo()}},webrtc:d.getWebRTCEnabled(),chat:d.getChatEnabled()};return a};e.on("reset",function(a){x({type:"danger",msg:a.reason})}),e.on("queueupdate",function(c){b.debug("<<------rtcomm-service------>> - Event: queueupdate"),b.debug("queueupdate",c),a.$evalAsync(function(){a.$broadcast("queueupdate",c)})}),e.on("newendpoint",function(c){b.debug("<<------rtcomm-service------>> - Event: newendpoint remoteEndpointID: "+c.getRemoteEndpointID()),c.on("onetimemessage",function(c){if(b.debug("<<------rtcomm-onetimemessage------>> - Event: ",c),"undefined"!=c.onetimemessage.type&&"iFrameURL"==c.onetimemessage.type){var d=s(c.endpoint.id);d.iFrameURL=c.onetimemessage.iFrameURL,a.$evalAsync(function(){a.$broadcast("rtcomm::iframeUpdate",c.endpoint.id,c.onetimemessage.iFrameURL)})}}),a.$evalAsync(function(){a.$broadcast("newendpoint",c)})});var o=function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){if(c.eventName.indexOf("session:")>-1){var b=s(c.endpoint.id);b.sessionState=c.eventName}a.$broadcast(c.eventName,c)}),1==j&&a.$digest()};e.setRtcommEndpointConfig({ringtone:d.getRingTone(),ringbacktone:d.getRingBackTone(),"session:started":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var b=s(c.endpoint.id);v(c.endpoint.id),b.sessionStarted=!0,b.remoteEndpointID=c.endpoint.getRemoteEndpointID(),a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"session:alerting":o,"session:trying":o,"session:ringing":o,"session:queued":o,"session:failed":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){t(c.endpoint.id),a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"session:stopped":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){t(c.endpoint.id),a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"webrtc:connected":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){s(c.endpoint.id).webrtcConnected=!0,a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"webrtc:remotemuted":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"webrtc:disconnected":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var b=r(c.endpoint.id);null!=b&&(b.webrtcConnected=!1),a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},"chat:connected":o,"chat:disconnected":o,"chat:message":function(c){b.debug("<<------rtcomm-service------>> - Event: "+c.eventName+" remoteEndpointID: "+c.endpoint.getRemoteEndpointID()),a.$evalAsync(function(){var b={time:new Date,name:c.message.from,message:angular.copy(c.message.message)};s(c.endpoint.id).chats.push(b),a.$broadcast(c.eventName,c)}),1==j&&a.$digest()},destroyed:o});var p=function(c){b.debug("<<------rtcomm-service------>> - Event: Provider init succeeded"),null!=i&&(b.debug("RtcommService: initSuccess: updating presence record"),e.publishPresence(i)),a.$evalAsync(function(){var b={ready:c.ready,registered:c.registered,endpoint:c.endpoint,userid:d.getProviderConfig().userid};a.$broadcast("rtcomm::init",!0,b)}),1==j&&a.$digest()},q=function(c){b.debug("<<------rtcomm-service------>> - Event: Provider init failed: error: ",c),a.$evalAsync(function(){a.$broadcast("rtcomm::init",!1,c)}),1==j&&a.$digest()},r=function(a){for(var b=null,c=0;c<h.length;c++)if(h[c].endpointUUID===a){b=h[c];break}return b},s=function(a){for(var b=null,c=0;c<h.length;c++)if(h[c].endpointUUID===a){b=h[c];break}return null==b&&(b={endpointUUID:a,chats:[],webrtcConnected:!1,sessionStarted:!1,iFrameURL:"about:blank",remoteEndpointID:null,activated:!0,sessionState:"session:stopped"},h[h.length]=b),b},t=function(b){for(var c=0;c<h.length;c++)if(h[c].endpointUUID===b){u(b).destroy(),h.splice(c,1),0==h.length?a.$broadcast("noEndpointActivated"):v(h[0].endpointUUID);break}},u=function(c){var d=null;return"undefined"==typeof c||null==c?(b.debug("getEndpoint: create new endpoint and setup onetimemessage event"),d=e.createRtcommEndpoint(),d.on("onetimemessage",function(c){if(b.debug("<<------rtcomm-onetimemessage------>> - Event: ",c),"undefined"!=c.onetimemessage.type&&"iFrameURL"==c.onetimemessage.type){var d=s(c.endpoint.id);d.iFrameURL=c.onetimemessage.iFrameURL,a.$evalAsync(function(){a.$broadcast("rtcomm::iframeUpdate",c.endpoint.id,c.onetimemessage.iFrameURL)})}})):d=e.getRtcommEndpoint(c),d},v=function(b){var c=w();if(null!=c&&c!=b){var d=r(c);null!=d&&(d.activated=!1)}var d=s(b);d.activated=!0,a.$broadcast("endpointActivated",b)},w=function(){for(var a=null,b=0;b<h.length;b++)if(1==h[b].activated){a=h[b].endpointUUID;break}return a},x=function(b){var c={type:"info",msg:"default message"};"string"==typeof b?c.msg=b:c=b,a.$evalAsync(function(){a.$broadcast("rtcomm::alert",c)})};return{alert:x,setKarmaTesting:function(){j=!0},isInitialized:function(){return f},setConfig:function(a){return 1==d.isRtcommDisabled()?void b.debug("RtcommService:setConfig: isRtcommDisabled = true; return with no setup"):(b.debug("rtcomm-services: setConfig: config: ",a),d.setProviderConfig(a),e.setRtcommEndpointConfig(n()),void(0==f&&("undefined"!=typeof a.identityServlet&&null!=a.identityServlet?c.get(a.identityServlet).success(function(a){"undefined"!=typeof a.userid?(d.setProviderConfig(a),e.init(d.getProviderConfig(),p,q),f=!0):b.error("RtcommService: setConfig promise: Invalid JSON object return from identityServlet: ",a)}).error(function(a,c,d,e){b.debug("RtcommService: setConfig promise: error accessing userid from identityServlet: "+c)}):("undefined"==typeof a.userid||""!=d.getProviderConfig().userid)&&(e.init(d.getProviderConfig(),p,q),f=!0))))},getPresenceMonitor:function(a){return e.getPresenceMonitor(a)},publishPresence:function(){1==f&&e.publishPresence(m())},addToPresenceRecord:function(a){for(var c=0;c<a.length;c++)m().userDefines.push(a[c]);1==f&&(b.debug("RtcommService: addToPresenceRecord: updating presence record to: ",m()),e.publishPresence(m()))},removeFromPresenceRecord:function(a,c){for(var d=0;d<a.length;d++)for(var g=0;g<m().userDefines.length;g++)if(m().userDefines[g].name==a[d].name){m().userDefines.splice(g,1);break}1==f&&c&&(b.debug("RtcommService: removeFromPresenceRecord: updating presence record to: ",m()),e.publishPresence(m()))},setPresenceRecordState:function(a){return m().state=a,e.publishPresence(m())},getEndpoint:function(a){return u(a)},destroyEndpoint:function(a){e.getRtcommEndpoint(a).destroy()},register:function(a){0==f?(d.getProviderConfig().userid=a,e.init(d.getProviderConfig(),p,q),f=!0):b.error("rtcomm-services: register: ERROR: endpoint provider already initialized")},unregister:function(){1==f?(e.destroy(),f=!1,q("destroyed")):b.error("rtcomm-services: unregister: ERROR: endpoint provider not initialized")},joinQueue:function(a){e.joinQueue(a)},leaveQueue:function(a){e.leaveQueue(a)},getQueues:function(){return g},sendChatMessage:function(a,b){var c=s(b);c.chats.push(a),e.getRtcommEndpoint(b).chat.send(a.message)},getChats:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.chats:null}return null},isWebrtcConnected:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.webrtcConnected:!1}return!1},getSessionState:function(a){return"undefined"!=typeof a&&null!=a?e.getRtcommEndpoint(a).getState():"session:stopped"},setAlias:function(a){"undefined"!=typeof a&&""!=a&&e.setUserID(a)},setUserID:function(a){"undefined"!=typeof a&&""!=a&&(d.setProviderConfig({userid:a}),e.init(d.getProviderConfig(),p,q))},setPresenceTopic:function(a){"undefined"!=typeof a&&""!=a&&(d.setProviderConfig({presenceTopic:a}),e.init(d.getProviderConfig(),p,q))},getIframeURL:function(a){if("undefined"!=typeof a&&null!=a){var b=r(a);return null!=b?b.iFrameURL:null}return null},putIframeURL:function(a,c){b.debug("RtcommService: putIframeURL: endpointUUID: "+a+" newURL: "+c);var d=e.getRtcommEndpoint(a);if(null!=d){var f=s(a);f.iFrameURL=c;var g={type:"iFrameURL",iFrameURL:c};b.debug("RtcommService: putIframeURL: sending new iFrame URL"),d.sendOneTimeMessage(g)}},placeCall:function(a,b){var c=u();if(b.indexOf("chat")>-1&&c.chat.enable(),b.indexOf("webrtc")>-1){var d=!0;b.indexOf("disableTrickleICE")>-1&&(d=!1),c.webrtc.enable({trickleICE:d})}return v(c.id),c.connect(a),c.id},getSessions:function(){return h},endCall:function(a){a.disconnect()},setActiveEndpoint:function(a){v(a)},getActiveEndpoint:function(){return w()},getRemoteEndpoint:function(a){var b=null;if(null!=a){var c=r(a);null!=c&&(b=c.remoteEndpointID)}return b},setDefaultViewSelector:function(){k="selfView",l="remoteView"},setViewSelector:function(a,b){k=a,l=b},setVideoView:function(a){b.debug("rtcommVideo: setting local media");var c=null;"undefined"!=typeof a&&null!=a?c=u(a):null!=w()&&(c=u(w())),null!=c&&c.webrtc.setLocalMedia({mediaOut:document.querySelector("#"+k),mediaIn:document.querySelector("#"+l)})}}}angular.module("angular-rtcomm-service",[]).config(["$logProvider",function(a){a.debugEnabled(!0)}]).factory("RtcommConfigService",a).factory("RtcommService",b),a.$inject=["$location","$log","$window"],b.$inject=["$rootScope","$log","$http","RtcommConfigService"]}(),function(){"use strict";function a(a,b,c,d){function e(){}var f=this;f.extendedConfig=null,d.debug("RtcommConfigController: configURL = "+f.configURL),f.setConfig=function(b){d.debug("RtcommConfigController: setting config data:"+b),a.setConfig(b)},c.init=function(a,b){d.debug("RtcommConfigController: initing configURL = "+a),f.configURL=a,"undefined"!=typeof b&&(f.extendedConfig=b),f.getConfig()},f.getConfig=function(){b.get(f.configURL).success(function(b){null!=f.extendedConfig&&(angular.extend(b,f.extendedConfig),d.debug("RtcommConfigController: extended config object: "+b)),a.setConfig(b)}).error(function(a,b,c,e){d.debug("RtcommConfigController: error accessing config: "+b)})},e()}angular.module("angular-rtcomm-ui").controller("RtcommConfigController",a),a.$inject=["RtcommService","$http","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-alert.html",controller:b,controllerAs:"alertVM",bindToController:!0};return a}function b(a,b,c){function d(){}var e=this;e.alerts=[],e.addAlert=function(a){e.alerts.push(a)},e.closeAlert=function(a){e.alerts.splice(a,1)},b.$on("rtcomm::alert",function(a,b){e.addAlert(b)}),d()}angular.module("angular-rtcomm-ui").directive("rtcommAlert",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-queues.html",controller:b,controllerAs:"queueVM",bindToController:!0};return a}function b(a,b,c){function d(){}var e=this;e.rQueues=[],e.autoJoinQueues=!1,e.queuePresenceData=[],e.queuePublishPresence=!1,e.queueFilter=null,b.init=function(a,b,d){c.debug("rtcommQueues: autoJoinQueues = "+a),e.autoJoinQueues=a,e.queuePublishPresence=b,"undefined"!=typeof d&&(e.queueFilter=d)},e.filterOutQueue=function(a){var b=!0;if(null!=e.queueFilter)for(var c=0;c<e.queueFilter.length;++c){var d=e.queueFilter[c];if(d==a.endpointID){b=!1;break}}else b=!1;return b},e.onQueueClick=function(b){c.debug("rtcommQueues: onClick: TOP");for(var d=0;d<e.rQueues.length;d++)e.rQueues[d].endpointID===b.endpointID?(c.debug("rtcommQueues: onClick: queue.endpointID = "+b.endpointID),0==b.active?(a.joinQueue(b.endpointID),e.rQueues[d].active=!0):(a.leaveQueue(b.endpointID),e.rQueues[d].active=!1)):d==e.rQueues.length-1&&c.debug("rtcommQueues: ERROR: queue.endpointID: "+b.endpointID+" not found in list of queues");e.updateQueuePresence()},e.updateQueuePresence=function(){if(1==e.queuePublishPresence){a.removeFromPresenceRecord(e.queuePresenceData,!1),e.queuePresenceData=[];for(var b=0;b<e.rQueues.length;b++)e.rQueues[b].active===!0&&e.queuePresenceData.push({name:"queue",value:e.rQueues[b].endpointID});a.addToPresenceRecord(e.queuePresenceData)}},b.$on("queueupdate",function(a,b){c.debug("rtcommQueues: scope queues",e.rQueues),Object.keys(b).forEach(function(a){c.debug("rtcommQueues: Push queue: "+b[a]),c.debug("rtcommQueues: autoJoinQueues: "+e.autoJoinQueues),0==e.filterOutQueue(b[a])&&(e.rQueues.push(b[a]),1==e.autoJoinQueues&&e.onQueueClick(b[a]))}),e.updateQueuePresence()}),b.$on("rtcomm::init",function(a,b,d){0==b&&(c.debug("rtcommQueues: init: clear queues"),e.rQueues=[])}),d()}angular.module("angular-rtcomm-ui").directive("rtcommQueues",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-register.html",controller:b,controllerAs:"registerVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.nextAction="Register",d.reguserid="",d.invalid=!1;var e=/(\$|#|\+|\/|\\)+/i;d.onRegClick=function(){"Register"!==d.nextAction||e.test(d.reguserid)?(c.debug("Unregister: reguserid ="+d.reguserid),a.unregister()):(c.debug("Register: reguserid ="+d.reguserid),a.register(d.reguserid))},b.$watch("registerVM.reguserid",function(){d.reguserid.length<1||e.test(d.reguserid)?d.invalid=!0:d.invalid=!1}),b.$on("rtcomm::init",function(a,b,c){1==b?(d.nextAction="Unregister",d.reguserid=c.userid):(d.nextAction="Register","destroyed"==c?d.reguserid="":d.reguserid="Init failed:"+c)})}angular.module("angular-rtcomm-ui").directive("rtcommRegister",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-sessionmgr.html",controller:b,controllerAs:"sessionVM",bindToController:!0};return a}function b(a,b,c){function d(){}var e=this;e.sessions=a.getSessions(),e.sessMgrActiveEndpointUUID=a.getActiveEndpoint(),e.publishPresence=!1,e.sessionPresenceData=[],e.init=function(a){e.publishPresence=a,e.updatePresence()},e.activateSession=function(b){c.debug("rtcommSessionmgr: activateEndpoint ="+b),e.sessMgrActiveEndpointUUID!=b&&a.setActiveEndpoint(b)},e.updatePresence=function(){1==e.publishPresence&&(a.removeFromPresenceRecord(e.sessionPresenceData,!1),e.sessionPresenceData=[{name:"sessions",value:String(e.sessions.length)}],a.addToPresenceRecord(e.sessionPresenceData))},b.$on("endpointActivated",function(a,b){c.debug("rtcommSessionmgr: endpointActivated ="+b),e.sessMgrActiveEndpointUUID=b}),b.$on("session:started",function(a,b){c.debug("rtcommSessionmgr: session:started: uuid ="+b.endpoint.id),e.updatePresence()}),d()}angular.module("angular-rtcomm-ui").directive("rtcommSessionManager",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){}d.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),d.epCtrlAVConnected=a.isWebrtcConnected(d.epCtrlActiveEndpointUUID),d.sessionState=a.getSessionState(d.epCtrlActiveEndpointUUID),d.disconnect=function(){e.debug("Disconnecting call for endpoint: "+d.epCtrlActiveEndpointUUID),a.getEndpoint(d.epCtrlActiveEndpointUUID).disconnect()},d.toggleAV=function(){e.debug("Enable AV for endpoint: "+d.epCtrlActiveEndpointUUID),0==d.epCtrlAVConnected?a.getEndpoint(d.epCtrlActiveEndpointUUID).webrtc.enable(function(b,c){b||(e.debug("Enable failed: ",c),a.alert({type:"danger",msg:c}))}):(e.debug("Disable AV for endpoint: "+d.epCtrlActiveEndpointUUID),a.getEndpoint(d.epCtrlActiveEndpointUUID).webrtc.disable())},d.$on("session:started",function(a,b){e.debug("session:started received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:started")}),d.$on("session:stopped",function(a,b){e.debug("session:stopped received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:stopped")}),d.$on("session:failed",function(a,b){e.debug("session:failed received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:failed")}),d.$on("webrtc:connected",function(a,b){d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.epCtrlAVConnected=!0)}),d.$on("webrtc:disconnected",function(a,b){d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.epCtrlAVConnected=!1)}),d.$on("endpointActivated",function(b,c){d.epCtrlActiveEndpointUUID=c,d.epCtrlAVConnected=a.isWebrtcConnected(c)}),d.$on("noEndpointActivated",function(a){d.epCtrlAVConnected=!1}),f()}angular.module("angular-rtcomm-ui").controller("RtcommEndpointController",a),a.$inject=["RtcommService","$http","$rootScope","$scope","$log"]}(),function(){"use strict";function a(a,c){function d(a,b,d,e){var f=angular.element(b.find(".panel-body")[0]),g=!0;e.scrollToBottom=function(b){g=b,a.bottom=b},f.bind("scroll",function(){f.prop("scrollTop")+f.prop("clientHeight")==f.prop("scrollHeight")?e.scrollToBottom(!0):e.scrollToBottom(!1)}),a.$watch(function(){return e.chats},function(){c.debug("rtcommChat - Link > $watch on chats called"),g&&f.scrollTop(f.prop("scrollHeight"))},!0)}var e={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-chat.html",link:d,controller:b,controllerAs:"chatVM",bindToController:!0};return e}function b(a,b,c){var d=this;d.chatActiveEndpointUUID=b.getActiveEndpoint(),d.chats=b.getChats(d.chatActiveEndpointUUID),d.keySendMessage=function(a){13===a.which&&d.sendMessage()},d.sendMessage=function(){c.debug("rtcommChat: sendMessage() -> "+d.message);var e={time:new Date,name:b.getEndpoint(d.chatActiveEndpointUUID).getLocalEndpointID(),message:angular.copy(d.message)};d.message="",d.scrollToBottom(!0),a.bottom=!0,b.sendChatMessage(e,d.chatActiveEndpointUUID)},a.$on("endpointActivated",function(a,e){c.debug("rtcommChat: endpointActivated ="+e),d.chats=b.getChats(e),d.chatActiveEndpointUUID=e}),a.$on("noEndpointActivated",function(a){d.chats=[],d.chatActiveEndpointUUID=null})}angular.module("angular-rtcomm-ui").directive("rtcommChat",a),a.$inject=["RtcommService","$log"],b.$inject=["$scope","RtcommService","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-endpoint-status.html",controller:b,controllerAs:"endpointStatusVM",bindToController:!0};return a}function b(a,b,c){var d=this;d.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),d.epCtrlRemoteEndpointID=a.getRemoteEndpoint(d.epCtrlActiveEndpointUUID),d.sessionState=a.getSessionState(d.epCtrlActiveEndpointUUID),d.failureReason="",d.queueCount=0,b.$on("session:started",function(a,b){c.debug("session:started received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:started",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:stopped",function(a,b){c.debug("session:stopped received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:stopped",d.epCtrlRemoteEndpointID=null)}),b.$on("session:failed",function(a,b){c.debug("session:failed received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:failed",d.failureReason=b.reason,d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:alerting",function(a,b){c.debug("session:alerting received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID!=b.endpoint.id&&(d.sessionState="session:alerting",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:connecting",function(a,b){c.debug("session:connecting received: endpointID = "+b.endpoint.id),d.sessionState="session:connecting",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID()}),b.$on("session:queued",function(a,b){c.debug("session:queued received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:queued",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:trying",function(a,b){c.debug("session:trying received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:trying",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("session:ringing",function(a,b){c.debug("session:ringing received: endpointID = "+b.endpoint.id),d.epCtrlActiveEndpointUUID==b.endpoint.id&&(d.sessionState="session:ringing",d.epCtrlRemoteEndpointID=b.endpoint.getRemoteEndpointID())}),b.$on("endpointActivated",function(b,c){d.epCtrlActiveEndpointUUID=c,d.epCtrlRemoteEndpointID=a.getEndpoint(c).getRemoteEndpointID(),d.sessionState=a.getSessionState(c)}),b.$on("noEndpointActivated",function(a){d.epCtrlRemoteEndpointID=null,d.sessionState="session:stopped"}),b.$on("rtcomm::init",function(b,c,e){c===!0&&(d.epCtrlActiveEndpointUUID=a.getActiveEndpoint(),d.epCtrlRemoteEndpointID=a.getRemoteEndpoint(d.epCtrlActiveEndpointUUID),d.sessionState=a.getSessionState(d.epCtrlActiveEndpointUUID),d.failureReason=""),0==c&&(d.sessionState="session:stopped",d.epCtrlRemoteEndpointID=null)})}function c(){}angular.module("angular-rtcomm-ui").directive("rtcommEndpointStatus",a),b.$inject=["RtcommService","$scope","$log"],c()}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-iframe.html",controller:b,controllerAs:"iframeVM",bindToController:!0};return a}function b(a,b,c,d,e,f){function g(){}var h=this;h.iframeActiveEndpointUUID=a.getActiveEndpoint(),h.iframeURL=null,h.initiframeURL=null,h.syncSource=!1,e.init=function(a){1==a&&(h.syncSource=!0,h.initiframeURL=c.absUrl())},h.setURL=function(c){f.debug("rtcommIframe: setURL: newURL: "+c),a.putIframeURL(h.iframeActiveEndpointUUID,c),h.iframeURL=b.trustAsResourceUrl(c)},h.forward=function(){},h.backward=function(){},e.$on("session:started",function(b,c){f.debug("session:started received: endpointID = "+c.endpoint.id),1==h.syncSource&&a.putIframeURL(c.endpoint.id,h.initiframeURL)}),e.$on("endpointActivated",function(c,d){f.debug("rtcommIframe: endpointActivated ="+d),0==h.syncSource&&(h.iframeURL=b.trustAsResourceUrl(a.getIframeURL(d)),h.iframeActiveEndpointUUID=d)}),e.$on("noEndpointActivated",function(a){0==h.syncSource&&(h.iframeURL=b.trustAsResourceUrl("about:blank"),h.iframeActiveEndpointUUID=null)}),e.$on("rtcomm::iframeUpdate",function(a,c,e){0==h.syncSource?(f.debug("rtcomm::iframeUpdate: "+e),e+="?disableRtcomm=true",h.iframeURL=b.trustAsResourceUrl(e)):(f.debug("rtcomm::iframeUpdate: load this url in a new tab: "+e),d.open(b.trustAsResourceUrl(e),"_blank"))}),g()}angular.module("angular-rtcomm-ui").directive("rtcommIframe",a),b.$inject=["RtcommService","$sce","$location","$window","$scope","$log"]}(),function(){"use strict";function a(){var a={restrict:"E",templateUrl:"templates/rtcomm/rtcomm-video.html",controller:b,controllerAs:"videoVM",bindToController:!0};return a}function b(a,b,c){var d=this;c.debug("VideoController Starting"),d.avConnected=a.isWebrtcConnected(a.getActiveEndpoint()),b.init=function(b,c){a.setViewSelector(b,c);var d=a.getActiveEndpoint();"undefined"!=typeof d&&null!=d&&a.setVideoView(d)};var e=a.getActiveEndpoint();"undefined"!=typeof e&&null!=e&&a.setVideoView(e),b.$on("endpointActivated",function(b,e){c.debug("rtcommVideo: endpointActivated ="+e),a.setVideoView(e),d.avConnected=a.isWebrtcConnected(a.getActiveEndpoint())}),b.$on("noEndpointActivated",function(a){d.avConnected=!1}),b.$on("webrtc:connected",function(b,c){a.getActiveEndpoint()==c.endpoint.id&&(d.avConnected=!0)}),b.$on("webrtc:disconnected",function(b,c){a.getActiveEndpoint()==c.endpoint.id&&(d.avConnected=!1)})}angular.module("angular-rtcomm-ui").directive("rtcommVideo",a),b.$inject=["RtcommService","$scope","$log"]}(),function(){"use strict";function a(a,b,c,d,e){function f(){}var g=this;g.alertingEndpointUUID=null,g.autoAnswerNewMedia=!1,g.alertActiveEndpointUUID=a.getActiveEndpoint(),g.caller=null,g.init=function(a){e.debug("rtcommAlert: autoAnswerNewMedia = "+a),g.autoAnswerNewMedia=a},g.showAlerting=function(d){var f=b.open({templateUrl:"templates/rtcomm/rtcomm-modal-alert.html",controller:"RtcommAlertModalInstanceController",size:d,backdrop:"static",resolve:{caller:function(){return g.caller}}});f.result.then(function(){var b=a.getEndpoint(g.alertingEndpointUUID);b&&(e.debug("Accepting call from: "+g.caller+" for endpoint: "+g.alertingEndpointUUID),b.accept(),c.$broadcast("rtcomm::alert-success"),b=null)},function(){var b=a.getEndpoint(g.alertingEndpointUUID);b&&(e.debug("Rejecting call from: "+g.caller+" for endpoint: "+g.alertingEndpointUUID),b.reject(),b=null)})},d.$on("endpointActivated",function(a,b){g.alertActiveEndpointUUID=b}),d.$on("session:alerting",function(a,b){g.alertActiveEndpointUUID==b.endpoint.id&&0==g.autoAnswerNewMedia||g.alertActiveEndpointUUID!=b.endpoint.id?(e.debug("rtcommAlert: display alterting model: alertActiveEndpointUUID = "+b.endpoint+" autoAnswerNewMedia = "+g.autoAnswerNewMedia),g.caller=b.endpoint.getRemoteEndpointID(),g.alertingEndpointUUID=b.endpoint.id,g.showAlerting()):(e.debug("Accepting media from: "+b.endpoint.getRemoteEndpointID()+" for endpoint: "+b.endpoint.id),b.endpoint.accept())}),f()}function b(a,b,c,d){a.caller=d,a.ok=function(){c.debug("Accepting alerting call"),b.close()},a.cancel=function(){c.debug("Rejecting alerting call"),b.dismiss("cancel")}}angular.module("angular-rtcomm-ui").controller("RtcommAlertModalController",a).controller("RtcommAlertModalInstanceController",b),a.$inject=["RtcommService","$modal","$rootScope","$scope","$log"],b.$inject=["$scope","$modalInstance","$log","caller"]}(),function(){"use strict";function a(a){function b(){}var c=this;c.calleeID=null,c.callerID=null,c.enableCallModel=!1,c.mediaToEnable=["chat"],c.init=function(a,b){c.calleeID=a,"undefined"!=typeof b&&(c.mediaToEnable=b)},c.placeCall=function(a){var b=$modal.open({templateUrl:"templates/rtcomm/rtcomm-modal-call.html",controller:"RtcommCallModalInstanceController",size:a,resolve:{}});b.result.then(function(a){$log.debug("rtcommCallModal: Calling calleeID: "+c.calleeID),$log.debug("rtcommCallModal: CallerID: "+a),null==c.callerID&&"undefined"!=typeof a&&""!=a&&(c.callerID=a,RtcommService.setAlias(a)),RtcommService.placeCall(c.calleeID,c.mediaToEnable)},function(){$log.info("Modal dismissed at: "+new Date)})},$scope.$on("rtcomm::init",function(a,b,d){$log.debug("RtcommCallModalController: rtcomm::init: success = "+b),1==b?c.enableCallModel=!0:c.enableCallModel=!1}),$scope.$on("session:started",function(a,b){c.enableCallModel=!1}),$scope.$on("session:stopped",function(a,b){c.enableCallModel=!0}),b()}function b(a,b,c){a.endpointAlias="",a.ok=function(){b.close(a.endpointAlias)},a.cancel=function(){b.dismiss("cancel")}}angular.module("angular-rtcomm-ui").controller("RtcommCallModalController",a).controller("RtcommCallModalInstanceController",b),a.$inject=["RtcommService","$modal","$scope","$log"],b.$inject=["$scope","$modalInstance","RtcommService"]}(),angular.module("angular-rtcomm-ui").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-alert.html",'<div class="row"><alert ng-repeat="alert in alerts" type="{{alert.type}}" close="closeAlert($index)">{{alert.msg}}</alert></div>'),a.put("templates/rtcomm/rtcomm-chat.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-comment"></span> Chat</div><div class="panel-body"><ul class="chat"><li class="right clearfix" ng-repeat="chat in chatVM.chats"><div id="{{$index}}" class="header"><strong class="primary-font">{{chat.name}}</strong> <small class="pull-right text-muted">{{chat.time | date:\'HH:mm:ss\'}}</small></div><p>{{chat.message}}</p></li></ul></div><div class="panel-footer"><div class="input-group"><input id="chat-input" type="text" class="form-control input-sm" placeholder="Type your message here..." type="text" ng-model="chatVM.message" ng-keypress="chatVM.keySendMessage($event)"> <span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-chat" ng-click="chatVM.sendMessage()" focusinput="true" ng-disabled="(chatVM.chatActiveEndpointUUID == null)">Send</button></span></div></div></div></div><!-- chat list ng-controller div -->'),
a.put("templates/rtcomm/rtcomm-endpoint-status.html",'<div class="endpoint-status"><p class="endpoint-controls-title navbar-text pull-right" ng-switch on="endpointStatusVM.sessionState"><span ng-switch-when="session:started">Connected to {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:stopped">No active sessions, waiting...</span> <span ng-switch-when="session:alerting">Inbound call from {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:trying">Attempting to call {{endpointStatusVM.epCtrlRemoteEndpointID}}</span> <span ng-switch-when="session:ringing">Call to {{endpointStatusVM.epCtrlRemoteEndpointID}} is ringing</span> <span ng-switch-when="session:queued">Waiting in queue at: {{endpointStatusVM.queueCount}}</span> <span ng-switch-when="session:failed">Call failed with reason: {{endpointStatusVM.failureReason}}</span> <span ng-switch-when="session:connecting">Connecting to {{endpointStatusVM.epCtrlRemoteEndpointID}} ...</span></p></div>'),a.put("templates/rtcomm/rtcomm-iframe.html",'<div><div class="panel panel-primary vertical-stretch"><div class="panel-heading"><span class="glyphicon glyphicon-link"></span> URL Sharing</div><div class="rtcomm-iframe"><iframe width="100%" height="100%" ng-src="{{iframeVM.iframeURL}}"></iframe></div><div class="row"><div class="col-lg-2"><button id="btnBackward" class="btn btn-primary" ng-click="iframeVM.backward()" focusinput="true" ng-disabled="(iframeVM.iframeUrl == null)"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true" aria-label="Backward"></span> Backward</button></div><div class="col-lg-2"><button id="btnForward" class="btn btn-primary" ng-click="iframeVM.forward()" ng-disabled="(iframeVM.iframeVM.iframeUrl == null)"><span class="glyphicon glyphicon-arrow-right" aria-hidden="true" aria-label="Forward"></span> Forward</button></div><div class="col-lg-8"><div class="input-group"><input id="setUrl" type="text" class="form-control" type="text" ng-model="iframeVM.newUrl"><span class="input-group-btn"><button class="btn btn-primary" id="btn-send-url" ng-click="iframeVM.setURL(newUrl)" focusinput="true">Set URL</button></span></div><!-- /input-group --></div></div></div></div>'),a.put("templates/rtcomm/rtcomm-modal-alert.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">New call alert</h4></div><div class="modal-body"><p>Do you want to accept a call from {{caller}}.</p></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Yes</button> <button type="button" ng-click="cancel()" class="btn btn-primary" data-dismiss="modal">No</button></div>'),a.put("templates/rtcomm/rtcomm-modal-call.html",'<div class="modal-header"><button type="button" class="close" ng-click="close(false)" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">Get Help</h4></div><div class="modal-body"><p>To help us serve you better, please provide some information before we begin.</p><form class="form-horizontal" role="form"><div class="form-group"><label for="name" class="col-sm-2 control-label">Name</label><div class="col-sm-10"><input type="text" class="form-control" id="name" placeholder="Your Name" ng-model="endpointAlias"></div></div></form></div><div class="modal-footer"><button type="button" ng-click="ok()" class="btn btn-default" data-dismiss="modal">Connect</button> <button type="button" ng-click="cancel()" class="btn btn-default" data-dismiss="modal">Cancel</button></div>'),a.put("templates/rtcomm/rtcomm-queues.html",'<div><div class="panel panel-primary"><div class="panel-heading"><span class="glyphicon glyphicon-sort-by-attributes-alt"></span> Queues</div><div class="queueContainer"><button type="button" ng-class="{\'btn btn-primary btn-default btn-block\': queue.active, \'btn btn-default btn-default btn-block\': !queue.active}" ng-repeat="queue in queuesVM.rQueues" ng-click="queuesVM.onQueueClick(queue)" data-toggle="tooltip" data-placement="top" title="{{queue.description}}">{{queue.active ? \'Leave\' : \'Join\'}} {{queue.endpointID}}</button></div></div></div>'),a.put("templates/rtcomm/rtcomm-register.html",'<div><div class="panel panel-primary"><div class="input-group"><input id="register-input" type="text" class="form-control input-sm" placeholder="Enter your ID here..." type="text" ng-model="registerVM.reguserid" ng-disabled="(registerVM.nextAction==\'Unregister\')"><span class="input-group-btn"><button class="btn btn-primary btn-sm" id="btn-register" ng-click="registerVM.onRegClick(registerVM.reguserid)" ng-disabled="registerVM.invalid" focusinput="true">{{registerVM.nextAction}}</button></span></div></div></div>'),a.put("templates/rtcomm/rtcomm-sessionmgr.html",'<div class="session-manager"><div class="btn-group pull-left" style="padding: 10px"><div><button class="session-manager-button" type="button" ng-switch on="session.activated" ng-class="{\'btn btn-primary btn-sm\': session.activated, \'btn btn-default btn-sm\': !session.activated}" ng-repeat="session in sessions" ng-click="activateSession(session.endpointUUID)"><span class="glyphicon glyphicon-eye-open" aria-hidden="true" ng-switch-when="true"></span> <span class="glyphicon glyphicon-eye-close" aria-hidden="true" ng-switch-when="false"></span> {{session.remoteEndpointID}}</button></div></div><p class="session-manager-title navbar-text pull-right">Sessions</p></div>'),a.put("templates/rtcomm/rtcomm-video.html",'<div id="videoContainer"><div id="selfViewContainer"><video title="selfView" id="selfView" class="selfView" autoplay muted></video></div><video title="remoteView" id="remoteView" class="remoteView" autoplay></video><!-- video title="remoteView" id="remoteView" class="remoteView" autoplay="true" poster="../views/rtcomm/images/video_camera_big.png"></video --></div>')}]),angular.module("angular-rtcomm-presence").run(["$templateCache",function(a){"use strict";a.put("templates/rtcomm/rtcomm-presence.html",'<div treecontrol class="tree-light" tree-model="presenceData" options="treeOptions" on-selection="showSelected(node)" expanded-nodes="expandedNodes"><button type="button" class="btn btn-primary btn-xs" aria-label="Left Align" ng-show="(node.record && !node.self)" ng-click="onCallClick(node.name)"><span class="glyphicon glyphicon-facetime-video" aria-hidden="true" aria-label="expand record"></span></button> {{node.name}} {{node.value ? \': \' + node.value : \'\'}}</div>')}]);